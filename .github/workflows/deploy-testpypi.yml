name: deploy-testpypi

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade build --user
          python3 -m pip install --upgrade twine

      - name: Build package
        run: python3 -m build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    needs:
    - build
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true

#  github-release:
#    name: >-
#      Sign the Python 🐍 distribution 📦 with Sigstore
#      and upload them to GitHub Release
#    needs:
#    - publish-to-testpypi
##    - publish-to-pypi
#    runs-on: ubuntu-latest
#
#    permissions:
#      contents: write  # IMPORTANT: mandatory for making GitHub Releases
#      id-token: write  # IMPORTANT: mandatory for sigstore

#    steps:
#    - name: Download all the dists
#      uses: actions/download-artifact@v4
#      with:
#        name: python-package-distributions
#        path: dist/
#    - name: Sign the dists with Sigstore
#      uses: sigstore/gh-action-sigstore-python@v3.0.0
#      with:
#        inputs: >-
#          ./dist/*.tar.gz
#          ./dist/*.whl
#    - name: Create GitHub Release
#      if: github.ref_type == 'tag'
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      run: >-
#        gh release create
#        "$GITHUB_REF_NAME"
#        --repo "$GITHUB_REPOSITORY"
#        --notes ""
#    - name: Upload artifact signatures to GitHub Release
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#      # Upload to GitHub Release using the `gh` CLI.
#      # `dist/` contains the built packages, and the
#      # sigstore-produced signatures and certificates.
#      run: >-
#        gh release upload
#        "$GITHUB_REF_NAME" dist/**
#        --repo "$GITHUB_REPOSITORY"